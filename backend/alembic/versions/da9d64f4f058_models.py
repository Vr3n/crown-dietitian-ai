"""Models

Revision ID: da9d64f4f058
Revises: 8d06e26f3e1c
Create Date: 2025-03-07 21:11:00.616649

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'da9d64f4f058'
down_revision: Union[str, None] = '8d06e26f3e1c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customermaster',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', name='gender'), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('alternate_email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mobile_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('alternate_mobile_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('allergies', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_customermaster_id'), 'customermaster', ['id'], unique=False)
    op.create_table('bodymeasurementmaster',
    sa.Column('customer_id', sa.Uuid(), nullable=False),
    sa.Column('measured_on', sa.Date(), nullable=False),
    sa.Column('height', sa.Float(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('body_fat_percentage', sa.Float(), nullable=True),
    sa.Column('waist_circumference', sa.Float(), nullable=True),
    sa.Column('hip_circumference', sa.Float(), nullable=True),
    sa.Column('chest_circumference', sa.Float(), nullable=True),
    sa.Column('arm_circumference', sa.Float(), nullable=True),
    sa.Column('thigh_circumference', sa.Float(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customermaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bodymeasurementmaster_id'), 'bodymeasurementmaster', ['id'], unique=False)
    op.create_table('diseasemaster',
    sa.Column('customer_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('from_date', sa.Date(), nullable=False),
    sa.Column('to_date', sa.Date(), nullable=True),
    sa.Column('severity', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('diagnosis_date', sa.Date(), nullable=True),
    sa.Column('medications', sa.JSON(), nullable=True),
    sa.Column('impact_on_diet', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customermaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_diseasemaster_id'), 'diseasemaster', ['id'], unique=False)
    op.create_table('injurymaster',
    sa.Column('customer_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('from_date', sa.Date(), nullable=False),
    sa.Column('to_date', sa.Date(), nullable=True),
    sa.Column('severity', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('injury_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('affected_body_part', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('impact_on_diet', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customermaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_injurymaster_id'), 'injurymaster', ['id'], unique=False)
    op.create_table('bodymeasurementaianalysismaster',
    sa.Column('bodymeasurement_id', sa.Uuid(), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ai_analysis', sa.JSON(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['bodymeasurement_id'], ['bodymeasurementmaster.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bodymeasurementaianalysismaster_id'), 'bodymeasurementaianalysismaster', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_bodymeasurementaianalysismaster_id'), table_name='bodymeasurementaianalysismaster')
    op.drop_table('bodymeasurementaianalysismaster')
    op.drop_index(op.f('ix_injurymaster_id'), table_name='injurymaster')
    op.drop_table('injurymaster')
    op.drop_index(op.f('ix_diseasemaster_id'), table_name='diseasemaster')
    op.drop_table('diseasemaster')
    op.drop_index(op.f('ix_bodymeasurementmaster_id'), table_name='bodymeasurementmaster')
    op.drop_table('bodymeasurementmaster')
    op.drop_index(op.f('ix_customermaster_id'), table_name='customermaster')
    op.drop_table('customermaster')
    # ### end Alembic commands ###
